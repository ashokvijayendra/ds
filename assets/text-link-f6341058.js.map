{"version":3,"file":"text-link-f6341058.js","sources":["../../../../node_modules/.pnpm/@carbon+react@1.41.2_react-dom@18.2.0_react@18.2.0_sass@1.55.0/node_modules/@carbon/react/es/components/Link/Link.js","../../../../libs/react/src/lib/components/text-link/text-link.tsx"],"sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2023\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React__default from 'react';\nimport { usePrefix } from '../../internal/usePrefix.js';\n\nconst Link = /*#__PURE__*/React__default.forwardRef(function Link(_ref, ref) {\n  let {\n    children,\n    className: customClassName,\n    href,\n    disabled = false,\n    inline = false,\n    visited = false,\n    renderIcon: Icon,\n    size,\n    target,\n    ...rest\n  } = _ref;\n  const prefix = usePrefix();\n  const className = cx(`${prefix}--link`, customClassName, {\n    [`${prefix}--link--disabled`]: disabled,\n    [`${prefix}--link--inline`]: inline,\n    [`${prefix}--link--visited`]: visited,\n    [`${prefix}--link--${size}`]: size\n  });\n  const rel = target === '_blank' ? 'noopener' : undefined;\n  const linkProps = {\n    className,\n    rel,\n    target\n  };\n\n  // Reference for disabled links:\n  // https://www.scottohara.me/blog/2021/05/28/disabled-links.html\n  if (!disabled) {\n    linkProps.href = href;\n  } else {\n    linkProps.role = 'link';\n    linkProps['aria-disabled'] = true;\n  }\n  return /*#__PURE__*/React__default.createElement(\"a\", _extends({\n    ref: ref\n  }, linkProps, rest), children, !inline && Icon && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: `${prefix}--link__icon`\n  }, /*#__PURE__*/React__default.createElement(Icon, null)));\n});\nLink.displayName = 'Link';\nLink.propTypes = {\n  /**\n   * Provide the content for the Link\n   */\n  children: PropTypes.node,\n  /**\n   * Provide a custom className to be applied to the containing `<a>` node\n   */\n  className: PropTypes.string,\n  /**\n   * Specify if the control should be disabled, or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Provide the `href` attribute for the `<a>` node\n   */\n  href: PropTypes.string,\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool,\n  /**\n   * Optional prop to render an icon next to the link.\n   * Can be a React component class\n   */\n  // @ts-expect-error - PropTypes are unable to cover this case.\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the size of the Link. Currently supports either `sm`, 'md' (default) or 'lg` as an option.\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * Specify whether you want the link to receive visited styles after the link has been clicked\n   */\n  visited: PropTypes.bool\n};\n\nexport { Link as default };\n","import { Link } from '@carbon/react';\nimport { TextLinkProps } from '@wag/web';\nimport cssClass from 'classnames';\nimport { ArrowLeftIcon, ArrowRightIcon } from '@wag/icons-react';\nimport { usePrefix } from '@carbon/react';\nimport React, { MouseEventHandler } from 'react';\ntype VariantSizeMap = {\n  default: 'lg' | 'md' | 'sm' | 'xs';\n  text: 'lg' | 'md' | 'sm';\n  icon: 'lg' | 'md' | 'sm';\n  caret: 'lg' | 'md';\n  list: 'lg' | 'md' | 'sm';\n};\n\ntype Variant = keyof VariantSizeMap;\nexport interface WagTextLinkProps<V extends Variant> extends TextLinkProps {\n  renderIcon?: V extends 'icon' ?  JSX.Element : never;\n  children?: React.ReactNode;\n  variant: V;\n  href: string;\n  size?: V extends keyof VariantSizeMap ? VariantSizeMap[V] : never;\n  onClick?: MouseEventHandler<HTMLAnchorElement>;\n}\n\nexport const WagTextLink = React.forwardRef(function WagTextLink<\n  V extends Variant\n>(\n  {\n    className,\n    fontWeight,\n    iconPosition,\n    linkText,\n    variant,\n    href,\n    size,\n    target,\n    onClick,\n    renderIcon,\n    children,\n    ...restProps\n  }: WagTextLinkProps<V>,\n  ref: React.Ref<HTMLAnchorElement>\n) {\n  const prefix = usePrefix();\n  const classNames = cssClass(className, {\n    [`${prefix}--text-link ${prefix}--text-link--${variant}`]:\n      variant !== 'default',\n    [`${prefix}--text-link ${prefix}--text-link--icon`]: renderIcon,\n    [`${prefix}--${fontWeight}`]: fontWeight,\n    [`${prefix}--caret--${iconPosition}`]: variant === 'caret' && iconPosition,\n    [`${prefix}--link--lg`]: size === 'lg',\n    [`${prefix}--link--sm`]: size === 'sm',\n    [`${prefix}--link--xs`]: size === 'xs',\n  });\n\n  let linkChild = children;\n\n  if (variant && variant === 'caret') {\n    linkChild =\n      iconPosition === 'left' ? (\n        <>\n          <ArrowLeftIcon /> {children}\n        </>\n      ) : (\n        <>\n          {children} <ArrowRightIcon />\n        </>\n      );\n  }\n\n  return (\n    <Link\n      onClick={onClick}\n      ref={ref}\n      href={href}\n      target={target}\n      className={classNames}\n      {...restProps}\n    >\n      {renderIcon && renderIcon}\n      {linkChild}\n    </Link>\n  );\n});\n\nWagTextLink.defaultProps = {\n  className: '',\n  fontWeight: 'normal',\n  iconPosition: 'left',\n  linkText: 'Click Me',\n  variant: 'default',\n  size: undefined,\n  href: '#',\n};\n\nWagTextLink.displayName = \"WagTextLink\";\n\nexport default WagTextLink;\n"],"names":["Link","React__default","_ref","ref","children","customClassName","href","disabled","inline","visited","Icon","size","target","rest","prefix","usePrefix","linkProps","cx","_extends","PropTypes","WagTextLink","React","className","fontWeight","iconPosition","linkText","variant","onClick","renderIcon","restProps","classNames","cssClass","linkChild","jsxs","Fragment","jsx","ArrowLeftIcon","ArrowRightIcon"],"mappings":"qUAaA,MAAMA,EAAoBC,EAAe,WAAW,SAAcC,EAAMC,EAAK,CAC3E,GAAI,CACF,SAAAC,EACA,UAAWC,EACX,KAAAC,EACA,SAAAC,EAAW,GACX,OAAAC,EAAS,GACT,QAAAC,EAAU,GACV,WAAYC,EACZ,KAAAC,EACA,OAAAC,EACA,GAAGC,CACJ,EAAGX,EACJ,MAAMY,EAASC,IAQTC,EAAY,CAChB,UARgBC,EAAG,GAAGH,CAAM,SAAUT,EAAiB,CACvD,CAAC,GAAGS,CAAM,kBAAkB,EAAGP,EAC/B,CAAC,GAAGO,CAAM,gBAAgB,EAAGN,EAC7B,CAAC,GAAGM,CAAM,iBAAiB,EAAGL,EAC9B,CAAC,GAAGK,CAAM,WAAWH,CAAI,EAAE,EAAGA,CAClC,CAAG,EAIC,IAHUC,IAAW,SAAW,WAAa,OAI7C,OAAAA,CACJ,EAIE,OAAKL,GAGHS,EAAU,KAAO,OACjBA,EAAU,eAAe,EAAI,IAH7BA,EAAU,KAAOV,EAKCL,EAAe,cAAc,IAAKiB,EAAS,CAC7D,IAAKf,CACT,EAAKa,EAAWH,CAAI,EAAGT,EAAU,CAACI,GAAUE,GAAqBT,EAAe,cAAc,MAAO,CACjG,UAAW,GAAGa,CAAM,cACrB,EAAeb,EAAe,cAAcS,EAAM,IAAI,CAAC,CAAC,CAC3D,CAAC,EACDV,EAAK,YAAc,OACnBA,EAAK,UAAY,CAIf,SAAUmB,EAAU,KAIpB,UAAWA,EAAU,OAIrB,SAAUA,EAAU,KAIpB,KAAMA,EAAU,OAIhB,OAAQA,EAAU,KAMlB,WAAYA,EAAU,UAAU,CAACA,EAAU,KAAMA,EAAU,MAAM,CAAC,EAIlE,KAAMA,EAAU,MAAM,CAAC,KAAM,KAAM,IAAI,CAAC,EAIxC,QAASA,EAAU,IACrB,EClEO,MAAMC,EAAcC,EAAM,WAAW,SAG1C,CACE,UAAAC,EACA,WAAAC,EACA,aAAAC,EACA,SAAAC,EACA,QAAAC,EACA,KAAApB,EACA,KAAAK,EACA,OAAAC,EACA,QAAAe,EACA,WAAAC,EACA,SAAAxB,EACA,GAAGyB,CACL,EACA1B,EACA,CACA,MAAMW,EAASC,IACTe,EAAaC,EAAST,EAAW,CACrC,CAAC,GAAGR,CAAM,eAAeA,CAAM,gBAAgBY,CAAO,EAAE,EACtDA,IAAY,UACd,CAAC,GAAGZ,CAAM,eAAeA,CAAM,mBAAmB,EAAGc,EACrD,CAAC,GAAGd,CAAM,KAAKS,CAAU,EAAE,EAAGA,EAC9B,CAAC,GAAGT,CAAM,YAAYU,CAAY,EAAE,EAAGE,IAAY,SAAWF,EAC9D,CAAC,GAAGV,CAAM,YAAY,EAAGH,IAAS,KAClC,CAAC,GAAGG,CAAM,YAAY,EAAGH,IAAS,KAClC,CAAC,GAAGG,CAAM,YAAY,EAAGH,IAAS,IAAA,CACnC,EAED,IAAIqB,EAAY5B,EAEZ,OAAAsB,GAAWA,IAAY,UAEvBM,EAAAR,IAAiB,OAEbS,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAACC,EAAc,EAAA,EAAE,IAAEhC,CAAA,CAAA,CACrB,EAGG6B,EAAAC,EAAA,CAAA,SAAA,CAAA9B,EAAS,MAAEiC,EAAe,EAAA,CAC7B,CAAA,CAAA,GAKJJ,EAACjC,EAAA,CACC,QAAA2B,EACA,IAAAxB,EACA,KAAAG,EACA,OAAAM,EACA,UAAWkB,EACV,GAAGD,EAEH,SAAA,CAAcD,GAAAA,EACdI,CAAA,CAAA,CAAA,CAGP,CAAC,EAEDZ,EAAY,aAAe,CACzB,UAAW,GACX,WAAY,SACZ,aAAc,OACd,SAAU,WACV,QAAS,UACT,KAAM,OACN,KAAM,GACR,EAEAA,EAAY,YAAc","x_google_ignoreList":[0]}